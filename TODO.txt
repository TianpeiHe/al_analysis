- plot_roi_util.py: check i don't need to import warn/sort_odors from al_util instead of
  al now (if latter works, it would only be b/c it was first imported in al_analysis)

- am i really not using my ijroi fork here? seems i just have a [presumably generic
  pypi, but maybe my version # just got inherited from that?] 0.4.1.dev0 installed?

- (med) add Z information for each glomerulus, and revisit glomerulus specific
  fitting? (now using depth instead of glomerulus ID, potentially giving us enough
  data to see an effect?)

  - try clustering glomeruli (those in both Hallem and my data, the same subset used
    to calculate dF/F -> spike delta est fn) by some combination of:
    - dF/F
    - hallem spike delta data
    - parameters of fit models?

    -> fit within each glomerulus type -> have dF/F->spike-delta-est fn use
    different model depending on input glomerulus type

    (may need to handle when glomerulus can't be assigned same type as glomerulus
    clustering/whatever from dF/F->spike-delta-est fitting)

old:
- fix how it seems that:
  1. opening expt via F2 in ImageJ
  2. selecting ROI -> p
  3. selecting diff ROI -> P (replaces window from #2 w/ window w/ both ROIs data)
  4. selecting (diff/same?) ROI -> H (pops up 2 new windows)
  5. selecting ROI unique from all above -> P

  ...ultimately creates two comparison windows (as created via P), when there should
  only ever be one comparison window open at a time

- does my creation of cache that imagej response comparison loads from make sense,
  now that i do separate al_analysis.py runs for pebbled/GH146? maintain both in cache?
  separate caches?

- maybe just make H update window (as P does to p window), with Hallem comparison stuff
  at the top? is only reason i might not want to do this that it's a bit unclear which
  ROI below should be compared to Hallem data (e.g. if i already was comparing other
  ROIs from my data, or if i do that with subsequent commands)

